/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
/* this is the first thing you do. Each and every element in css will apply this. This removes default margins and paddings on any element like h1 or p */
* {
  margin: 0px;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Lato" sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  /* we have a bg image. We need to set green color on top of it, so we specify a gradiant. Gradiant will come first coz it should stay on top of bg image */
  /* linear gradiant is having multiple colors and to right indicate from left (dark green to right light green). We can also give to top OR to bottom OR to right bottom and so on */
  background-image: linear-gradient(
      to right bottom,
      rgb(126, 213, 111, 0.8),
      rgb(40, 180, 133, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover; /* fits completely*/
  background-position: top; /* always fixed to top. Top never changes when u reduce window size. Can be done for bottom/center as well. Play with it and see*/

  /* clip-path is to trim the image where we need. polygon takes 4 points left, right, right bottom and left bottom. 
  0 0 -> first 0 is from left side of webpage and second 0 is from top of webpage
  so, we say at 0 0 my point should be located
  similarly, 100% 0 -> from left side of webpage my second point should be placed 100% and 0% from top 
  and so on.
  
  For detailed explanation view - https://www.youtube.com/watch?v=fn88PkKo9gQ&ab_channel=WinstonCodes
  You can calculate this using - https://bennettfeely.com/clippy/
Note: Triangle takes only 3 points and we can do this way - polygon(50% 0, 100% 100%, 0 100%)
  */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* setting this element to relative because this is parent element to logo-box and text-box which are the child and absolutely positioned */
  position: relative;
}

/* Logo */
.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}
.logo {
  /* If we specify height then the widht will automatically set by browser and we dont need to set that. If we set width then our width will take the priority and appears on the page */
  /* The same applies of width. If we set width, then height will be set automatically by browser */
  height: 35px;
}

/* Text-box */
.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  background-color: red;
  /* At this point, checkout this commit and take a look at how it looks in the browser. For better understanding I am using background red which I will
  remove in next commit. Even thought its left 50% and top 40%, it looks odd coz text-box's beginning  is set to top 40 and left 50.
  Whereas, we need text-box's center part to be aligned 40% from top and 50% from left. 
  We will fix this by adding transform property  when translated, the element itself will move as defined inside translate and that gives better look
  which will be done in the next commit*/
}

/* Heading */
.heading-primary {
  color: #fff;
  text-transform: uppercase;
}
/* We want the span element to take up entire block. By default span is an inline element. We make it block here coz we 
want main and sub to be on different lines */
.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400; /*by default h1 has higher font-weight;*/
  letter-spacing: 35px;
}
.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 7 00;
  letter-spacing: 17.4px;
}
