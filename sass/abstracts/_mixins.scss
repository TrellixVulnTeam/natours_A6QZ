// clear floats for the col
@mixin clearfix {
  &::after {
    // clearfix will append a pseudo element after the element which clears the float
    content: "";
    display: table; // this can be even blocl, but table is just a standard
    clear: both; // clears both float left and right
  }
}
// to center an element
@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER
/*
0 - 600px :  Phone
600px - 900px :  Tablet portrait
900px - 1200px :  Tablet landscape
[1200px to 1800 px] is where our normal styles apply
1800px+  : Big desktops
*/

// Mixins basically inserts the code we write here in the files (places)we call
@mixin respond-phone {
  @media (max-width: 600px) {
    @content; // replaces with what we write in the file.  Look below example
  }
}
// How this above code works?
/*
Let's say in story.scss, we want this media query

.story{
  @media(max-width:600px){
    width:50%;
  }
}

// using the above mixin respond-phone, we can write this like this below (making use of @content)
.story{
  @include respond-phone{
    width:50%;                        
  }
}

----------------------------------------------
Well, this above example respond-phone is great, but what if we want multiple screen widths, for example,

.story{
  @media(max-width:900px){
    width:50%;
  }

   @media(max-width:600px){
    width:40%;
  }

   @media(max-width:300px){
    width:30%;
  }
}

For the above, we should write multiple mixins (different code blocks ) like this
@mixin respond-phone900 {
  @media (max-width: 900px) {
    @content; // replaces with what we write in the file.  Look below example
  }
}
@mixin respond-phone600 {
  @media (max-width: 600px) {
    @content; // replaces with what we write in the file.  Look below example
  }
}
@mixin respond-phone400 {
  @media (max-width: 400px) {
    @content; // replaces with what we write in the file.  Look below example
  }
}

But this is not efficient. It will be efficient if we will be able to pass the arguments like below.

@mixin respond($breakpoint){

  @if $breakpoint == phone {
     @media (max-width: 600px) {
         @content; 
     }
  }
}



//  

*/
