// contains all the base properties related to our project

/* this is the first thing you do. Each and every element in css will apply this. This removes default margins and paddings on any element like h1 or p */
/* its better to apply ::after and ::before pseudo elements on * (all) and set them as well to defaults to avoid any strange behavior */
*,
*::after,
*::before {
  margin: 0px;
  padding: 0;
  /* inheriting from body. It means, all elements ( all elemetns because we are defining inside *) will inherit border-box */
  box-sizing: inherit;
}
/* font-size (rem and px) guide lines below */
/* We're going to convert all absolute px units to relative rem units. rem is relative to the base/root font size mentioned in html (we can also mention in body, but lets do in html below) */
/* Note that the base font size by browser is 16px, but lets keep it for 10px now and design everything according to this because it will be easy for our calculations. 10px = 1rem */
/* Finally we should change 10px to % which is 10px/16px (62.5%) because % will be relative to the browser's font-size which makes user to change it (by zooming-in or out) easily. If we set it to 10px then user cannot change it which is bad */
html {
  /* root font-size . This defines what 1rem is - which is 10px */
  /* it should be in % rather than px so that user can change it in the browser when zooms in or out. Default is 16px but we need a % equal to 10px which is 10/16 which is 62.5% */
  font-size: 62.5%; //1 rem = 10px;  10px/16px = 62.5%

  // always make sure you write in descending order (example first for 900px and then for 600px
  // the reason is that if the screen is 300px, then both 900px and 600px media queries written will apply. In that case we want the 600px mediaquery to be applied on that and not 900px one. It will only happen when it is written at last

  // note that I am writing in descending order here. Ignore big-desktop because its min-width (see the mixin) and it doesnt affect the rest of them. The others are based on max-width so should be written in descending order
  @include respond(big-desktop) {
    // width > 1800
    font-size: 75%; // 1rem = 12px ; 12/16 =
  }
  // descending order (big device to small device). If we dont follow this then the bigger device queries (written last) will be applied on small devices
  @include respond(tab-land) {
    // width < 1200
    font-size: 56.25%; // 1 rem = 9px; 9/16 = 56.25%
  }
  @include respond(tab-port) {
    // width < 900
    font-size: 50%; // 1 rem = 8px; 8/16 =  50%
  }
}

body {
  /* instead of writing this border-box setting in *, you should use here so that you can use inherit in * for all elements to inherit from body */
  box-sizing: border-box;
  position: relative;
}
