.composition {
  position: relative;
  &__photo {
    width: 55%; // for responsivity, we always need to define images width in %
    box-shadow: 0 1.5rem 4rem rgba($color-black, 0.4);
    border-radius: 0.2rem;
    position: absolute;
    z-index: 10; //initially setting z-index. not necessary here actually. this is there so that we can increase this on hover and show the full image on hover later
    // for the animation effect, setting transition
    transition: all 0.2s;
    // this is related to outline prop below applied on hover. outline is exactly like border. outline-offset provides a padding b/w border and content.
    // we could've used border and padding, but we're simply using outline and outline-offset here
    outline-offset: 2rem;

    @include respond(tab-port) {
      float: left;
      position: relative; //we need to have this for floats to work
      width: 33.3333333%;
      box-shadow: 0 1.5rem 3rem rgba($color-black, 0.2);
    }

    &--p1 {
      left: 0;
      top: -2rem;
      @include respond(tab-port) {
        top: 0;
        transform: translate(1.1);
      }
    }
    &--p2 {
      right: 0;
      top: 2rem;
      @include respond(tab-port) {
        top: -1rem;
        transform: scale(1.3);
        z-index: 100;
      }
    }

    &--p3 {
      left: 20%;
      top: 10rem;
      @include respond(tab-port) {
        top: 1rem;
        left: 0;
        transform: scale(1.1);
      }
    }

    &:hover {
      transform: scale(1.05) scaleY(-0.5rem); //scales bigger and also moves a little in y direction
      box-shadow: 0 2.5rem 4rem rgba($color-black, 0.5);
      z-index: 20; // higher than initial z-index 10, so this image will show up completely
      outline: 1.5rem solid $color-primary; //same like border. look above outline-offset for more explanation
    }
  }

  //   composition:hover composition__photo:not(:hover) -> When we hover composition then select the photo that is not hovered and decrease the size of not hovered photos
  &:hover &__photo:not(:hover) {
    transform: scale(0.95);
  }
}
