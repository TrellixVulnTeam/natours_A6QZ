.row {
  // max-width vs width - width forces it to stay the mentioned size while max-width allows it to shrink if necessary based on viewport width;
  // min-width: is the width it cannot not be smaller than the specified number. It introduces horizontal scroll;
  //   width: 295rem;
  max-width: $grid-width;
  background-color: #eee;
  margin: 0 auto;
  //   margin-bottom: $gutter-vertical; // we can include this here if we are not using  &:not(:last-child)

  //   we dont need the vertical gutter for the last child so we do this. Alternate way of doing this is uncommented below
  //   &:last-child {
  //     margin-bottom: 0;
  //   }

  //   this means, everything except the last child
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  // columns which are inside of .row
  .col-1-of-2 {
    float: left; // first one will float left and then next will follow it. no need any right float here

    //   we have a grid like this, to get the
    //   --------------- gutter  ---------------
    //   how to get one column here? we have 100% - gutter = 2 columns. So 1 column is (100%-gutter)/2
    //   in sass we can do this calculation for width of one column. Note that in the calc function we need to use # like below when we use variables

    width: calc((100% - #{$gutter-horizontal}) / 2);
    background-color: orangered;
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }
  @include clearfix;
}
// clearfix is included in mixin like this
// row::after{}
