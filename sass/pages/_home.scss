// section-about style is written here in pages/home becuse - about section appears only in the home page and no where else in the website

.section-about {
  background-color: $color-grey-light-1;
  padding: 25rem 0;
  //   At this point before specifying margin, we have a header which is 95vh clipped to 75vh. So remaining 20 must be adjusted with the margin so that the grey color is covered right below the header
  margin-top: -20vh;

  @include respond(tab-port) {
    padding: 20rem 0;
  }
}

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      /* note that the hex color inside rgba works only for sass/scss and not for normal css*/
        rgba($color-primary-dark, 0.8)
    ),
    url(../img/nat-4.jpg);
  background-size: cover;
  // make the 3d shape of features section here.
  // we can use the background-clip prop as we did it for header, but this is another trick we'll use now
  transform: skewY(-7deg);
  // at this point, the bg image is skewed to y direction, but along with that, all the boxes (feature-boxes) also skewed along with it.
  // so we need to skew back the feature-boxes (direct children of this .section-features) to the opposite direction

  // two ways we can do. one way is to go and do it on the feature-box class
  // other way is to select the direct children of this .section-features  (which is the .row holding the feature-boxes) and skew it in opposite direction
  // this second way is more effective because even if we add more content / feature-boxes some day then this would help

  // selecting all direct children
  // looks like - section-features > * . To select not only direct children but all the children (nested) we do & *
  & > * {
    // this skews the direct children (only .row holding the feature boxes in this case)  in opposite direction
    transform: skewY(7deg);
  }

  // since the bg is skewed, we have a white space in the left top. Let's fix that by applying negative margin-top
  margin-top: -10rem;
}

.section-tours {
  background-color: $color-grey-light-1;
  padding: 25rem 0 15rem 0;
  // to move up
  margin-top: -10rem;

  @include respond(tab-port) {
    padding: 20rem 0 10rem 0;
  }
}

.section-stories {
  padding: 15rem 0;
  // for bg-video which is absolutely positioned
  position: relative;

  @include respond(tab-port) {
    padding: 10rem 0;
  }
}

.section-book {
  padding: 15rem 0;
  background-image: linear-gradient(
    to right bottom,
    $color-primary-light,
    $color-primary-dark
  );
  @include respond(tab-port) {
    padding: 10rem 0;
  }
}

.book {
  // now, to get the white color background on the form on the image,one way we could do is to add another layer of div and clip it and then filter it.
  // Let's now explore the other way of doing it through gradient. Let's add a gradient to the bg image separated by ,

  // we are saying, we want gradient to be 105 deg (which creates the line)
  // at 0%, we want white, at 50% we want white and at 50% we also want transparent color which continues further
  background-image: linear-gradient(
      105deg,
      rgba(white, 0.9) 50%,
      transparent 50%
    ),
    url("../img/nat-10.jpg");

  background-size: cover; // this can also be %. 100% is equal to or same as cover
  height: 50rem; // for testing only, will remove it later
  border-radius: 0.3rem;
  box-shadow: 0 1.5rem 4rem rgba($color-black, 0.2);

  &__form {
    width: 50%;
    padding: 6rem;
  }
}
